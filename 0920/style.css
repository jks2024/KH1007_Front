
 /* 전체 선택자 : 모든 요소를 한번에 선택자로 지정하는 방법 */
 * {
    color : orangered;
 }
 /* 태그 선택자 : 태그명으로 선택자를 지정하는 방법 */
 p {
    font-style: italic;
 }
/* 클래스 선택자 : .클래스명 { 스타일 규칙 } */
.accent {
    border: 1px solid #000;
    padding: 5px;
}
.bg {
    background-color: #ddd;
}
/* 아이디 선택자 : id속성값을 이용해 선택자를 지정하는 방법 */
/* 속성값 앞에 #기호를 붙입니다.*/
/* 클래스 선택자는 문서에서 여러번 적용 할 수 있는 반면에 id 선택자는 문서에서 한번만 적용*/
#container {
    width: 500px;
    margin: 10px auto; /* 테두리의 바깥 여백 */
    padding: 10px; /* 테두리의 안쪽 여백 */
    border: 1px solid #000; /* 테두리 라인 지정 */
}
/* 기본 속성 선택자 : 속성과 값을 사용해 선택자를 지정하는 방법 */
a[target="_self"] {
    color:blue;
}

/* 조합 선택자 : 기본 선택자에 여러가지 조합을 추가해 선택자를 사용하는 방법 */
/* 콤마로 구분해 여러가지 선택자를 한꺼번에 사용 */
p, #title, .red {
    color: orangered;
}
/* 자식 선택자 : 부모 요소의 하위에 있는 자식 요소에 스타일을 적용할때 사용 */
/* 부모 선택자 > 자식 선택자 { CSS 코드 작성 } */
/* .box > p {
    background-color: blanchedalmond;
}  */
/* 인접 형제 선택자 : 지정한 선택자 요소 바로 다음에 있는 형제 관계 요소를 선택자로 지정 */
/* 이전 선택자 + 대상 선택자 { CSS 코드 작성 } */
/* h1 + h2 {
    background-color: cadetblue;
} */
/* 일반 형제 선택자 : 이전 선택자 뒤에 오는 형제 관계 요소를 모두 선택자로 지정 */
/* 이전 선택자 ~ 대상 선택자 { CSS 코드 작성 } */
h1 ~ h3 {
    background-color: chocolate;
}
/* 가상 요소 선택자 : HTML 구성되어 있지 않지만 마치 존재하는 것처럼 취급해 선택하는 선택자 */
/* p::before {
    content: '@@';
}
p::after {
    content: '^^';
} */

/* 가상 클래스 선택자 > 링크 가상 선택자 : 링크 상태를 이용해 선택하는 방법 입니다 */
/* 기준 요소:가상 클래스 선택자 { CSS 코드 작성 } */
/* :link  한번도 방문하지 않은 링크 일 때 선택 */
/* :visited 한번이라도 방문한 적이 있는 링크 일 때 선택 */
a:link {
    color: orange;
}
a:visited {
    color: green;
}
/* 동적 가상 선택자 : 사용자의 어떤 행동에 따라 동적으로 변하는 상태를 이용해 선택 */
/* :hover 요소에 마우스를 올리면 해당 태그가 선택됨 */
/* :active 요소를 마우스 클릭하고 있는 동안 태그가 선택 */
button {
    width: 150px;
    height: 80px;
    background-color: orange;
    color: white;
    transition: 1s .5s;
}
/* button:hover {
    width: 180px;
    height: 100px;
    columns: white;
    background-color: red;
}
button:active {
    width: 180px;
    height: 100px;
    columns: white;
    background-color: brown;
} */

/* 입력 요소 가상 클래스 선택자 : 입력 요소의 특정 상태를 이용해 선택자로 지정하는 방법 */
/* :focus 입력 요소에 커서가 활성화되면 선택자로 지정 */
/* :checked 체크 표시가 있으염 선택자로 지정 */
/* :disabled 요소가 비활성화되면 선택자로 지정 */
/* :enabled 요소가 활성화되면 선택자로 지정 */
input:checked {
    color:darkblue;
    background-color: chartreuse;
}
/* 구조적 가상 클래스 선택자 : 웹 문서의 구조를 기준으로 특정 위치에 있는 요소 선택 */
/* E:first-child 첫번째 자식 요소를 선택 */
/* E:last-child 마지막 자식 요소를 선택 */
/* E:nth-child(n) n번째 자식 요소를 선택 */
/* E:nth-last-child(n) 뒤에서 부터 n번째 자식 요소 선택 */
/* :nth-of-type(n) 부모 요소의 자식 중 n번째 */ 

/* p:nth-child(1)  {
    color: blue;
} */
p:nth-of-type(2) {
    color: green;
}

div.box {
    background-color: black;
}
section#main {
    background-color: chartreuse;
}

div:hover > button {
    background-color: blue;
}

a[target="_blank"] {
    background-color: yellow;
    border: 1px solid #ccc;
    font-weight: bold;

}























